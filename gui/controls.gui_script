local constants = require "constants"

local START = "start"
local PAUSE = "pause"
local PLAY = "play"
local MUTE = "mute_sound"
local ENABLE_SOUND = "enable_sound"
local RESTART = "restart"
local NO = "no"
local YES = "yes"
local RESTART_GAME = "restart_game"
local GAME_OVER = "game_over"

local function toggle(nodes, enable)
	for idx, node in pairs(nodes) do
		gui.set_enabled(node, enable)
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.muted = false
	self.start = gui.get_node(START)
	self.enable_sound = gui.get_node(ENABLE_SOUND)
	self.disable_sound = gui.get_node(MUTE)
	self.pause = gui.get_node(PAUSE)
	self.paused = gui.get_node("paused")
	self.play = gui.get_node(PLAY)
	self.restart = gui.get_node(RESTART)
	self.no = gui.get_node(NO)
	self.yes = gui.get_node(YES)
	self.restart_game = gui.get_node(RESTART_GAME)
	self.game_over = gui.get_node(GAME_OVER)
	self.started = false

	toggle({self.enable_sound, self.pause, self.yes, self.no, self.paused, self.game_over, self.restart_game}, false)
	toggle({self.start, self.disable_sound, self.play}, true)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function on_input(self, action_id, action)
	local start_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(START), action.x, action.y) and action.pressed and gui.is_enabled(self.start)
	local pause_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(PAUSE), action.x, action.y) and action.pressed and gui.is_enabled(self.pause)
	local play_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(PLAY), action.x, action.y) and action.pressed and gui.is_enabled(self.play)
	local mute_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(MUTE), action.x, action.y) and action.pressed and gui.is_enabled(self.disable_sound)
	local enable_sound_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(ENABLE_SOUND), action.x, action.y) and action.pressed and gui.is_enabled(self.enable_sound)
	local restart_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(RESTART), action.x, action.y) and action.pressed and gui.is_enabled(self.restart)
	local no_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(NO), action.x, action.y) and action.pressed and gui.is_enabled(self.no)
	local yes_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(YES), action.x, action.y) and action.pressed and gui.is_enabled(self.yes)
	local restart_game_clicked = action_id == hash(constants.CLICK) and gui.pick_node(gui.get_node(RESTART_GAME), action.x, action.y) and action.pressed and gui.is_enabled(self.restart_game)

	local mute_pressed = action_id == hash(constants.MUTE_BUTTON) and action.released
	local start_pressed = action_id == hash(constants.FIRE_BUTTON) and action.released

	-- State machine this?
	if (start_clicked or start_pressed) and self.started ~= true then
		self.started = true
		toggle({self.start, self.play}, false)
		toggle({self.pause}, true)
		msg.post(constants.CONTROLLER, constants.START_GAME)
		msg.post("/player/player", constants.START_GAME)
	elseif pause_clicked then
		toggle({self.paused, self.play}, true)
		toggle({self.pause}, false)
		msg.post(constants.CONTROLLER, constants.PAUSE_GAME)
	elseif play_clicked and self.started then
		toggle({self.pause}, true)
		toggle({self.paused, self.play}, false)
		msg.post(constants.CONTROLLER, constants.UNPAUSE_GAME)
	elseif mute_clicked or (self.muted ~= true and mute_pressed) then
		self.muted = true
		msg.post(constants.CONTROLLER, constants.MUTE)
		toggle({self.enable_sound}, true)
		toggle({self.disable_sound}, false)
	elseif enable_sound_clicked or (self.muted == true and mute_pressed) then
		self.muted = false
		msg.post(constants.CONTROLLER, constants.UNMUTE)
		toggle({self.disable_sound}, true)
		toggle({self.enable_sound}, false)
	elseif restart_clicked and self.started then
		msg.post(constants.CONTROLLER, constants.PAUSE_GAME)
		toggle({self.pause}, true)
		toggle({self.yes, self.no}, true)
		toggle({self.enable_sound, self.pause, self.paused, self.disable_sound, self.play, self.restart}, false)
	elseif no_clicked then
		msg.post(constants.CONTROLLER, constants.UNPAUSE_GAME)
		toggle({self.paused, self.play, self.restart}, true)
		toggle({self.yes, self.no, self.pause}, false)
		toggle({self.enable_sound}, self.muted)
		toggle({self.disable_sound}, not self.muted)
	elseif yes_clicked then
		msg.post(constants.CONTROLLER, constants.RESTART_LEVEL)
	elseif restart_game_clicked then
		msg.post(constants.CONTROLLER, constants.RESTART_GAME)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash(constants.DIE) then
		toggle({self.yes, self.no, self.enable_sound, self.pause, self.paused, self.disable_sound, self.play, self.restart}, false)
		toggle({self.restart_game, self.game_over}, true)
		msg.post(constants.CONTROLLER, constants.END_GAME)
	end
end
